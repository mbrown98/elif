[{"/Users/mattbrown/projects/elif/client/src/App.js":"1","/Users/mattbrown/projects/elif/client/src/index.js":"2","/Users/mattbrown/projects/elif/client/src/components/Posts/Posts.js":"3","/Users/mattbrown/projects/elif/client/src/components/Form/styles.js":"4","/Users/mattbrown/projects/elif/client/src/components/Posts/Post/styles.js":"5","/Users/mattbrown/projects/elif/client/src/reducers/index.js":"6","/Users/mattbrown/projects/elif/client/src/reducers/posts.js":"7","/Users/mattbrown/projects/elif/client/src/components/Posts/styles.js":"8","/Users/mattbrown/projects/elif/client/src/api/index.js":"9","/Users/mattbrown/projects/elif/client/src/actions/posts.js":"10","/Users/mattbrown/projects/elif/client/src/components/Form/Form.js":"11","/Users/mattbrown/projects/elif/client/src/components/Posts/Post/Post.js":"12","/Users/mattbrown/projects/elif/client/src/styles.js":"13","/Users/mattbrown/projects/elif/client/src/constants/actionTypes.js":"14"},{"size":1545,"mtime":1609284305376,"results":"15","hashOfConfig":"16"},{"size":459,"mtime":1609261489447,"results":"17","hashOfConfig":"16"},{"size":741,"mtime":1609262257680,"results":"18","hashOfConfig":"16"},{"size":425,"mtime":1609191578872,"results":"19","hashOfConfig":"16"},{"size":963,"mtime":1609191626207,"results":"20","hashOfConfig":"16"},{"size":121,"mtime":1609192468533,"results":"21","hashOfConfig":"16"},{"size":498,"mtime":1609284980445,"results":"22","hashOfConfig":"16"},{"size":266,"mtime":1609191636184,"results":"23","hashOfConfig":"16"},{"size":426,"mtime":1609287745899,"results":"24","hashOfConfig":"16"},{"size":1224,"mtime":1609284923835,"results":"25","hashOfConfig":"16"},{"size":3256,"mtime":1609283943588,"results":"26","hashOfConfig":"16"},{"size":2320,"mtime":1609284034232,"results":"27","hashOfConfig":"16"},{"size":492,"mtime":1609284549217,"results":"28","hashOfConfig":"16"},{"size":134,"mtime":1609284895357,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"wkpgbe",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"33"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mattbrown/projects/elif/client/src/App.js",["62"],"import React, { useEffect, useState } from \"react\";\nimport {\n  Container,\n  AppBar,\n  Row,\n  Typography,\n  Grow,\n  Grid,\n} from \"@material-ui/core\";\n\nimport { useDispatch } from \"react-redux\";\nimport { getPosts } from \"./actions/posts\";\n\nimport Posts from \"./components/Posts/Posts\";\nimport Form from \"./components/Form/Form\";\n\nimport useStyles from \"./styles\";\n\n// import memories from \"./Images/.....\"\n\nconst App = () => {\n  const [currentId, setCurrentId] = useState(null);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getPosts());\n  }, [dispatch, currentId]);\n  return (\n    <Container maxwidth=\"lg\">\n      <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\n        <Typography className={classes.heading} variant=\"h2\" align=\"center\">\n          elif.\n        </Typography>\n        {/* <img className={classes.image} src={memories} alt=\"memories\" height=\"60\"/> */}\n      </AppBar>\n      <Grow in>\n        <Container>\n          <Grid\n            container\n            className={classes.mainContainer}\n            justify=\"space-between\"\n            alignItems=\"stretch\"\n            spacing={4}\n          >\n            <Grid item xs={12} sm={7}>\n              <Posts setCurrentId={setCurrentId} currentId={currentId} />\n            </Grid>\n            <Grid item xs={12} sm={4}>\n              <Form currentId={currentId} setCurrentId={setCurrentId} />\n            </Grid>\n          </Grid>\n        </Container>\n      </Grow>\n    </Container>\n  );\n};\n\nexport default App;\n",["63","64"],"/Users/mattbrown/projects/elif/client/src/index.js",[],"/Users/mattbrown/projects/elif/client/src/components/Posts/Posts.js",[],"/Users/mattbrown/projects/elif/client/src/components/Form/styles.js",[],"/Users/mattbrown/projects/elif/client/src/components/Posts/Post/styles.js",[],"/Users/mattbrown/projects/elif/client/src/reducers/index.js",[],["65","66"],"/Users/mattbrown/projects/elif/client/src/reducers/posts.js",["67"],"import { FETCH_ALL, CREATE, UPDATE, DELETE } from \"../constants/actionTypes\";\n\nexport default (posts = [], action) => {\n  switch (action.type) {\n    case FETCH_ALL:\n      return action.payload;\n    case DELETE:\n      return posts.filter((post) => post._id !== action.payload);\n    case CREATE:\n      return [...posts, action.payload];\n    case UPDATE:\n      return posts.map((post) =>\n        post._id === action.payload._id ? action.payload : post\n      );\n    default:\n      return posts;\n  }\n};\n","/Users/mattbrown/projects/elif/client/src/components/Posts/styles.js",[],"/Users/mattbrown/projects/elif/client/src/api/index.js",[],"/Users/mattbrown/projects/elif/client/src/actions/posts.js",[],"/Users/mattbrown/projects/elif/client/src/components/Form/Form.js",[],"/Users/mattbrown/projects/elif/client/src/components/Posts/Post/Post.js",[],"/Users/mattbrown/projects/elif/client/src/styles.js",[],"/Users/mattbrown/projects/elif/client/src/constants/actionTypes.js",[],{"ruleId":"68","severity":1,"message":"69","line":5,"column":3,"nodeType":"70","messageId":"71","endLine":5,"endColumn":6},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"72","replacedBy":"76"},{"ruleId":"74","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":3,"column":1,"nodeType":"80","endLine":18,"endColumn":3},"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","no-native-reassign",["81"],"no-negated-in-lhs",["82"],["81"],["82"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]